{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { browserDetectorSync } from './BrowserDetectorSync';\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nvar BrowserDetector = /** @class */function () {\n  function BrowserDetector() {}\n  BrowserDetector.prototype.detect = function (config) {\n    return Promise.resolve(browserDetectorSync.detect(config));\n  };\n  return BrowserDetector;\n}();\nexport var browserDetector = new BrowserDetector();","map":{"version":3,"names":["browserDetectorSync","BrowserDetector","prototype","detect","config","Promise","resolve","browserDetector"],"sources":["/home/trioangle/opentelemetry/develop/opentelemetry-demo-app/frontend/node_modules/@opentelemetry/resources/src/detectors/BrowserDetector.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IResource } from '../IResource';\nimport { ResourceDetectionConfig } from '../config';\nimport { Detector } from '../types';\nimport { browserDetectorSync } from './BrowserDetectorSync';\n\n/**\n * BrowserDetector will be used to detect the resources related to browser.\n */\nclass BrowserDetector implements Detector {\n  detect(config?: ResourceDetectionConfig): Promise<IResource> {\n    return Promise.resolve(browserDetectorSync.detect(config));\n  }\n}\n\nexport const browserDetector = new BrowserDetector();\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAmBA,SAASA,mBAAmB,QAAQ,uBAAuB;AAE3D;;;AAGA,IAAAC,eAAA;EAAA,SAAAA,gBAAA,GAIA;EAHEA,eAAA,CAAAC,SAAA,CAAAC,MAAM,GAAN,UAAOC,MAAgC;IACrC,OAAOC,OAAO,CAACC,OAAO,CAACN,mBAAmB,CAACG,MAAM,CAACC,MAAM,CAAC,CAAC;EAC5D,CAAC;EACH,OAAAH,eAAC;AAAD,CAAC,CAJD;AAMA,OAAO,IAAMM,eAAe,GAAG,IAAIN,eAAe,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}