{"ast":null,"code":"var _jsxFileName = \"/home/trioangle/opentelemetry/develop/opentelemetry-demo-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { tracer } from './tracing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const span = tracer.startSpan('load_application-admin');\n    span.setAttribute('custom_attribute', 'custom_value');\n    span.end();\n\n    // Send the trace to the backend\n    fetch('http://localhost:3004/traces', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: 'frontend_load_app',\n        attributes: {\n          'frontend': 'true',\n          'custom_attribute': 'custom_value'\n        }\n      })\n    }).then(response => response.text()).then(data => console.log(data)).catch(error => console.error('Error sending trace to backend:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","tracer","jsxDEV","_jsxDEV","App","_s","span","startSpan","setAttribute","end","fetch","method","headers","body","JSON","stringify","name","attributes","then","response","text","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/trioangle/opentelemetry/develop/opentelemetry-demo-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport { tracer } from './tracing';\n\nfunction App() {\n  useEffect(() => {\n    const span = tracer.startSpan('load_application-admin');\n    span.setAttribute('custom_attribute', 'custom_value');\n    span.end();\n\n    // Send the trace to the backend\n    fetch('http://localhost:3004/traces', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: 'frontend_load_app',\n        attributes: {\n          'frontend': 'true',\n          'custom_attribute': 'custom_value',\n        },\n      }),\n    })\n    .then(response => response.text())\n    .then(data => console.log(data))\n    .catch(error => console.error('Error sending trace to backend:', error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbL,SAAS,CAAC,MAAM;IACd,MAAMM,IAAI,GAAGL,MAAM,CAACM,SAAS,CAAC,wBAAwB,CAAC;IACvDD,IAAI,CAACE,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;IACrDF,IAAI,CAACG,GAAG,CAAC,CAAC;;IAEV;IACAC,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE,mBAAmB;QACzBC,UAAU,EAAE;UACV,UAAU,EAAE,MAAM;UAClB,kBAAkB,EAAE;QACtB;MACF,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5BxB,OAAA;QAAAwB,QAAA,GAAG,OACI,eAAAxB,OAAA;UAAAwB,QAAA,EAAM;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,wBAC9B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CAlCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}